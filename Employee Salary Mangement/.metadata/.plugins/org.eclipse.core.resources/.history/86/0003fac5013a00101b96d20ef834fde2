<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ page import="java.util.*, com.model.Employee, com.dao.EmployeeDAO, java.text.*" %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Delete Employee - Employee Management System</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
            padding: 20px 0;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 20px;
        }
        
        .header {
            text-align: center;
            color: white;
            margin-bottom: 30px;
            padding: 25px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            backdrop-filter: blur(15px);
            box-shadow: 0 12px 40px rgba(31, 38, 135, 0.37);
            border: 1px solid rgba(255, 255, 255, 0.18);
        }
        
        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 8px rgba(0,0,0,0.3);
        }
        
        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }
        
        .nav-breadcrumb {
            background: rgba(255, 255, 255, 0.95);
            padding: 15px 25px;
            border-radius: 15px;
            margin-bottom: 30px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .nav-breadcrumb a {
            color: #667eea;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s ease;
        }
        
        .nav-breadcrumb a:hover {
            color: #4c51bf;
        }
        
        .nav-breadcrumb span {
            color: #718096;
        }
        
        .main-content {
            display: grid;
            grid-template-columns: 1fr 2fr;
            gap: 30px;
            margin-bottom: 40px;
        }
        
        .form-section {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 35px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        .section-title {
            color: #4a5568;
            font-size: 1.8rem;
            margin-bottom: 25px;
            text-align: center;
            position: relative;
        }
        
        .section-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 60px;
            height: 3px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 2px;
        }
        
        .form-group {
            margin-bottom: 25px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #4a5568;
            font-size: 1rem;
        }
        
        .form-group input, .form-group select {
            width: 100%;
            padding: 15px 18px;
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: white;
            font-family: inherit;
        }
        
        .form-group input:focus, .form-group select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
            transform: translateY(-2px);
        }
        
        .form-group input.error {
            border-color: #e53e3e;
            background-color: #fed7d7;
        }
        
        .error-message {
            color: #e53e3e;
            font-size: 0.875rem;
            margin-top: 5px;
            display: none;
        }
        
        .required {
            color: #e53e3e;
        }
        
        .btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 12px;
            font-size: 1.1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
            position: relative;
            overflow: hidden;
        }
        
        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }
        
        .btn:hover::before {
            left: 100%;
        }
        
        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 35px rgba(102, 126, 234, 0.4);
        }
        
        .btn:active {
            transform: translateY(-1px);
        }
        
        .btn-danger {
            background: linear-gradient(135deg, #e53e3e 0%, #c53030 100%);
        }
        
        .btn-danger:hover {
            box-shadow: 0 15px 35px rgba(229, 62, 62, 0.4);
        }
        
        .btn-secondary {
            background: #718096;
            margin-left: 15px;
        }
        
        .btn-secondary:hover {
            background: #4a5568;
            box-shadow: 0 15px 35px rgba(113, 128, 150, 0.4);
        }
        
        .btn-home {
            background: linear-gradient(135deg, #38b2ac 0%, #319795 100%);
            padding: 12px 25px;
            font-size: 1rem;
            margin-bottom: 20px;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }
        
        .btn-home:hover {
            box-shadow: 0 15px 35px rgba(56, 178, 172, 0.4);
        }
        
        .btn-search {
            background: linear-gradient(135deg, #ed8936 0%, #dd6b20 100%);
            padding: 12px 25px;
            font-size: 1rem;
            margin-left: 15px;
        }
        
        .btn-search:hover {
            box-shadow: 0 15px 35px rgba(237, 137, 54, 0.4);
        }
        
        .employees-table-section {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 35px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        .table-container {
            overflow-x: auto;
            margin-top: 25px;
            border-radius: 15px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        }
        
        .employees-table {
            width: 100%;
            border-collapse: collapse;
            background: white;
            border-radius: 15px;
            overflow: hidden;
        }
        
        .employees-table th {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px 15px;
            text-align: left;
            font-weight: 600;
            font-size: 1rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .employees-table td {
            padding: 18px 15px;
            border-bottom: 1px solid #e2e8f0;
            transition: background-color 0.3s ease;
        }
        
        .employees-table tr:hover td {
            background-color: #f8faff;
        }
        
        .employees-table tr:last-child td {
            border-bottom: none;
        }
        
        .employee-id {
            font-weight: 600;
            color: #667eea;
        }
        
        .employee-name {
            font-weight: 500;
            color: #2d3748;
        }
        
        .employee-salary {
            font-weight: 600;
            color: #38a169;
        }
        
        .employee-gender {
            display: inline-block;
            padding: 5px 12px;
            border-radius: 20px;
            font-size: 0.875rem;
            font-weight: 500;
        }
        
        .gender-male {
            background: #bee3f8;
            color: #2b6cb0;
        }
        
        .gender-female {
            background: #fbb6ce;
            color: #b83280;
        }
        
        .gender-other {
            background: #e2e8f0;
            color: #4a5568;
        }
        
        .success-message {
            background: linear-gradient(135deg, #c6f6d5 0%, #9ae6b4 100%);
            border: 1px solid #9ae6b4;
            color: #276749;
            padding: 20px 25px;
            border-radius: 15px;
            margin: 25px 0;
            display: none;
            animation: slideInDown 0.5s ease;
            font-weight: 500;
        }
        
        .error-alert {
            background: linear-gradient(135deg, #fed7d7 0%, #feb2b2 100%);
            border: 1px solid #feb2b2;
            color: #c53030;
            padding: 20px 25px;
            border-radius: 15px;
            margin: 25px 0;
            display: none;
            animation: slideInDown 0.5s ease;
            font-weight: 500;
        }
        
        .info-alert {
            background: linear-gradient(135deg, #bee3f8 0%, #90cdf4 100%);
            border: 1px solid #90cdf4;
            color: #2c5282;
            padding: 20px 25px;
            border-radius: 15px;
            margin: 25px 0;
            font-weight: 500;
        }
        
        .warning-alert {
            background: linear-gradient(135deg, #fef5e7 0%, #fed7aa 100%);
            border: 1px solid #fed7aa;
            color: #c05621;
            padding: 20px 25px;
            border-radius: 15px;
            margin: 25px 0;
            font-weight: 500;
        }
        
        @keyframes slideInDown {
            from {
                transform: translateY(-20px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }
        
        .search-section {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 35px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            margin-bottom: 30px;
        }
        
        .search-form {
            display: flex;
            gap: 15px;
            align-items: end;
        }
        
        .search-input {
            flex: 1;
        }
        
        .delete-form {
            display: none;
            animation: fadeIn 0.5s ease;
        }
        
        .delete-form.show {
            display: block;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .loading {
            display: none;
            text-align: center;
            padding: 30px;
        }
        
        .spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #667eea;
            border-radius: 50%;
            width: 60px;
            height: 60px;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .no-employees {
            text-align: center;
            padding: 60px 20px;
            color: #718096;
            font-size: 1.1rem;
        }
        
        .no-employees .icon {
            font-size: 4rem;
            margin-bottom: 20px;
            opacity: 0.5;
        }
        
        .stats-bar {
            display: flex;
            justify-content: space-around;
            margin-bottom: 25px;
            background: #f8faff;
            padding: 20px;
            border-radius: 15px;
        }
        
        .stat-item {
            text-align: center;
        }
        
        .stat-number {
            font-size: 2rem;
            font-weight: bold;
            color: #667eea;
            display: block;
        }
        
        .stat-label {
            font-size: 0.9rem;
            color: #718096;
            margin-top: 5px;
        }
        
        .confirmation-modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            backdrop-filter: blur(5px);
        }
        
        .modal-content {
            background: white;
            margin: 15% auto;
            padding: 30px;
            border-radius: 20px;
            width: 90%;
            max-width: 500px;
            box-shadow: 0 25px 50px rgba(0,0,0,0.25);
            text-align: center;
            animation: modalSlideIn 0.3s ease;
        }
        
        @keyframes modalSlideIn {
            from {
                transform: translateY(-50px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }
        
        .modal-icon {
            font-size: 4rem;
            color: #e53e3e;
            margin-bottom: 20px;
        }
        
        .modal-title {
            font-size: 1.5rem;
            color: #2d3748;
            margin-bottom: 15px;
            font-weight: 600;
        }
        
        .modal-text {
            color: #718096;
            margin-bottom: 30px;
            font-size: 1.1rem;
            line-height: 1.5;
        }
        
        .modal-buttons {
            display: flex;
            gap: 15px;
            justify-content: center;
        }
        
        .employee-details {
            background: #fff5f5;
            border: 2px solid #feb2b2;
            border-radius: 15px;
            padding: 20px;
            margin: 20px 0;
            text-align: left;
        }
        
        .employee-details h4 {
            color: #c53030;
            margin-bottom: 15px;
            font-size: 1.2rem;
        }
        
        .detail-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
            padding: 5px 0;
            border-bottom: 1px solid #fed7d7;
        }
        
        .detail-row:last-child {
            border-bottom: none;
            margin-bottom: 0;
        }
        
        .detail-label {
            font-weight: 600;
            color: #4a5568;
        }
        
        .detail-value {
            color: #2d3748;
        }
        
        @media (max-width: 1200px) {
            .main-content {
                grid-template-columns: 1fr;
                gap: 30px;
            }
        }
        
        @media (max-width: 768px) {
            .container {
                padding: 0 15px;
            }
            
            .header h1 {
                font-size: 2rem;
            }
            
            .form-section, .employees-table-section, .search-section {
                padding: 25px;
            }
            
            .nav-breadcrumb {
                flex-direction: column;
                gap: 5px;
                text-align: center;
            }
            
            .employees-table {
                font-size: 0.9rem;
            }
            
            .employees-table th,
            .employees-table td {
                padding: 12px 8px;
            }
            
            .search-form {
                flex-direction: column;
                gap: 20px;
            }
            
            .modal-content {
                margin: 10% auto;
                padding: 20px;
            }
        }
        
        @media (max-width: 480px) {
            .btn {
                width: 100%;
                margin: 10px 0;
            }
            
            .btn-secondary, .btn-search {
                margin-left: 0;
            }
            
            .modal-buttons {
                flex-direction: column;
            }
            
            .modal-buttons .btn {
                margin: 5px 0;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Header -->
        <div class="header">
            <h1>Delete Employee</h1>
            <p>Search and remove employee records permanently</p>
        </div>
        
        <!-- Breadcrumb Navigation -->
        <div class="nav-breadcrumb">
            <a href="index.jsp">🏠 Home</a>
            <span>›</span>
            <span>Delete Employee</span>
        </div>
        
        <!-- Back to Home Button -->
        <button class="btn btn-home" onclick="window.location.href='index.jsp'">
            ← Back to Dashboard
        </button>
        
        <!-- Success/Error Messages -->
        <%
        String msg = (String) request.getAttribute("message");
        if (msg != null) {
            if (msg.toLowerCase().contains("deleted") || msg.toLowerCase().contains("success")) {
        %>
        <div class="success-message" style="display: block;">
            <%= msg %> 🎉
        </div>
        <%
            } else {
        %>
        <div class="error-alert" style="display: block;">
            <%= msg %>
        </div>
        <%
            }
        }
        %>
        
        <!-- Search Section -->
        <div class="search-section">
            <h2 class="section-title">Search Employee to Delete</h2>
            <form method="get" class="search-form" onsubmit="return validateSearchForm()">
                <div class="form-group search-input">
                    <label for="searchId">Enter Employee Number <span class="required">*</span></label>
                    <input type="number" id="searchId" name="empno" required min="1" 
                           placeholder="Enter employee number to search and delete"
                           value="<%= request.getParameter("empno") != null ? request.getParameter("empno") : "" %>">
                    <div class="error-message" id="searchIdError">Employee number is required</div>
                </div>
                <button type="submit" class="btn btn-search">
                    🔍 Search Employee
                </button>
            </form>
        </div>

        <%
        String empnoParam = request.getParameter("empno");
        Employee emp = null;
        boolean employeeFound = false;
        String errorMsg = "";
        
        if (empnoParam != null && !empnoParam.trim().isEmpty()) {
            try {
                int empId = Integer.parseInt(empnoParam);
                emp = EmployeeDAO.getEmployeeById(empId);
                
                if (emp != null) {
                    employeeFound = true;
                } else {
                    errorMsg = "Employee with ID " + empId + " not found!";
                }
            } catch (NumberFormatException e) {
                errorMsg = "Invalid employee number format!";
            } catch (Exception e) {
                errorMsg = "Error searching employee: " + e.getMessage();
                e.printStackTrace();
            }
        }
        %>
        
        <% if (!errorMsg.isEmpty()) { %>
        <div class="error-alert" style="display: block;">
            <%= errorMsg %>
        </div>
        <% } %>
        
        <% if (employeeFound && emp != null) { %>
        <!-- Employee Found - Show Delete Form -->
        <div class="warning-alert">
            <strong>⚠️ Warning:</strong> You are about to delete employee <%= emp.getName() %> (ID: #<%= emp.getId() %>).
            This action cannot be undone!
        </div>
        
        <!-- Main Content -->
        <div class="main-content">
            <!-- Delete Employee Form -->
            <div class="form-section">
                <h2 class="section-title">🗑️ Delete Employee</h2>
                
                <div class="employee-details">
                    <h4>Employee Details to be Deleted:</h4>
                    <div class="detail-row">
                        <span class="detail-label">Employee Number:</span>
                        <span class="detail-value employee-id">#<%= emp.getId() %></span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Name:</span>
                        <span class="detail-value employee-name"><%= emp.getName() %></span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Joining Date:</span>
                        <span class="detail-value"><%= emp.getDoj() %></span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Gender:</span>
                        <span class="detail-value">
                            <span class="employee-gender <%= emp.getGender().toLowerCase().equals("male") ? "gender-male" : emp.getGender().toLowerCase().equals("female") ? "gender-female" : "gender-other" %>">
                                <%= emp.getGender() %>
                            </span>
                        </span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Salary:</span>
                        <span class="detail-value employee-salary">₹<%= String.format("%.2f", emp.getSalary()) %></span>
                    </div>
                </div>
                
                <div class="warning-alert">
                    <strong>⚠️ Important Notice:</strong>
                    <ul style="margin-top: 10px; padding-left: 20px;">
                        <li>This will permanently delete the employee record</li>
                        <li>All associated data will be lost</li>
                        <li>This action cannot be reversed</li>
                    </ul>
                </div>
                
                <div style="text-align: center; margin-top: 35px;">
                    <button type="button" class="btn btn-danger" onclick="confirmDelete(<%= emp.getId() %>, '<%= emp.getName() %>')">
                        <span>🗑️ Delete Employee</span>
                    </button>
                    <button type="button" class="btn btn-secondary" onclick="window.location.href='deleteEmployee.jsp'">
                        <span>↺ Cancel</span>
                    </button>
                </div>
            </div>
            
            <!-- Employee Current Info -->
            <div class="employees-table-section">
                <h2 class="section-title">Employee Information</h2>
                
                <div class="table-container">
                    <table class="employees-table">
                        <tbody>
                            <tr>
                                <td style="font-weight: 600; background: #fff5f5;">Employee Number</td>
                                <td class="employee-id">#<%= emp.getId() %></td>
                            </tr>
                            <tr>
                                <td style="font-weight: 600; background: #fff5f5;">Name</td>
                                <td class="employee-name"><%= emp.getName() %></td>
                            </tr>
                            <tr>
                                <td style="font-weight: 600; background: #fff5f5;">Joining Date</td>
                                <td><%= emp.getDoj() %></td>
                            </tr>
                            <tr>
                                <td style="font-weight: 600; background: #fff5f5;">Gender</td>
                                <td>
                                    <span class="employee-gender <%= emp.getGender().toLowerCase().equals("male") ? "gender-male" : emp.getGender().toLowerCase().equals("female") ? "gender-female" : "gender-other" %>">
                                        <%= emp.getGender() %>
                                    </span>
                                </td>
                            </tr>
                            <tr>
                                <td style="font-weight: 600; background: #fff5f5;">Salary</td>
                                <td class="employee-salary">₹<%= String.format("%.2f", emp.getSalary()) %></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                
                <div style="margin-top: 20px; padding: 15px; background: #fff5f5; border-radius: 10px; border-left: 4px solid #e53e3e;">
                    <strong style="color: #c53030;">⚠️ Deletion Warning:</strong>
                    <p style="color: #c53030; margin-top: 5px;">
                        Once deleted, this employee record cannot be recovered. Please ensure you have backed up any important data.
                    </p>
                </div>
            </div>
        </div>
        <% } %>
        
        <!-- All Employees Table -->
        <div class="employees-table-section">
            <h2 class="section-title">All Employees</h2>
            
            <%
                List<Employee> empList = (List<Employee>) request.getAttribute("employeeList");
                int totalEmployees = 0;
                int maleCount = 0;
                int femaleCount = 0;
                double avgSalary = 0;
                
                try {
                    if (empList == null) {
                        empList = EmployeeDAO.getAllEmployees();
                    }
                    
                    if (empList != null) {
                        totalEmployees = empList.size();
                        
                        double totalSalary = 0;
                        for (Employee e : empList) {
                            if ("Male".equals(e.getGender())) {
                                maleCount++;
                            } else if ("Female".equals(e.getGender())) {
                                femaleCount++;
                            }
                            totalSalary += e.getSalary();
                        }
                        
                        if (totalEmployees > 0) {
                            avgSalary = totalSalary / totalEmployees;
                        }
                    }
                } catch (Exception e) {
                    // Handle exception silently for stats
                }
            %>
            
            <div class="stats-bar">
                <div class="stat-item">
                    <span class="stat-number"><%= totalEmployees %></span>
                    <div class="stat-label">Total Employees</div>
                </div>
                <div class="stat-item">
                    <span class="stat-number"><%= maleCount %></span>
                    <div class="stat-label">Male</div>
                </div>
                <div class="stat-item">
                    <span class="stat-number"><%= femaleCount %></span>
                    <div class="stat-label">Female</div>
                </div>
                <div class="stat-item">
                    <span class="stat-number">₹<%= String.format("%.0f", avgSalary) %></span>
                    <div class="stat-label">Avg Salary</div>
                </div>
            </div>
            
            <div class="loading" id="loading">
                <div class="spinner"></div>
                <p>Loading employees...</p>
            </div>
            
            <div class="table-container">
                <%
                try {
                    if (empList != null && !empList.isEmpty()) {
                %>
                <table class="employees-table">
                    <thead>
                        <tr>
                            <th>Employee No.</th>
                            <th>Name</th>
                            <th>Joining Date</th>
                            <th>Gender</th>
                            <th>Salary</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <%
                        for (Employee employee : empList) {
                        %>
                        <tr>
                            <td class="employee-id">#<%= employee.getId() %></td>
                            <td class="employee-name"><%= employee.getName() %></td>
                            <td><%= employee.getDoj() %></td>
                            <td>
                                <span class="employee-gender <%= employee.getGender().toLowerCase().equals("male") ? "gender-male" : employee.getGender().toLowerCase().equals("female") ? "gender-female" : "gender-other" %>">
                                    <%= employee.getGender() %>
                                </span>
                            </td>
                            <td class="employee-salary">₹<%= String.format("%.2f", employee.getSalary()) %></td>
                            <td>
                                <button type="button" class="btn btn-danger" style="font-size: 0.9rem; padding: 8px 16px;" onclick="confirmDelete(<%= employee.getId() %>, '<%= employee.getName() %>')">
                                    🗑️ Delete
                                </button>
                            </td>
                        </tr>
                        <%
                        }
                        %>
                    </tbody>
                </table>
                <%
                    } else {
                %>
                <div class="no-employees">
                    <div class="icon">👥</div>
                    <h3>No Employees Found</h3>
                    <p>There are currently no employees in the system.</p>
                    <button class="btn" onclick="window.location.href='addEmployee.jsp'" style="margin-top: 20px;">
                        ➕ Add First Employee
                    </button>
                </div>
                <%
                    }
                } catch (Exception e) {
                %>
                <div class="error-alert" style="display: block;">
                    Error loading employees: <%= e.getMessage() %>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Confirmation Modal -->
    <div id="confirmationModal" class="confirmation-modal">
        <div class="modal-content">
            <div class="modal-icon">⚠️</div>
            <h3 class="modal-title">Confirm Employee Deletion</h3>
            <div class="modal-text">
                Are you sure you want to permanently delete employee <strong id="employeeName"></strong> (ID: #<span id="employeeId"></span>)?
                <br><br>
                <span style="color: #e53e3e; font-weight: 600;">This action cannot be undone!</span>
            </div>
            <div class="modal-buttons">
                <button type="button" class="btn btn-danger" onclick="deleteEmployee()">
                    🗑️ Yes, Delete
                </button>
                <button type="button" class="btn btn-secondary" onclick="closeModal()">
                    ❌ Cancel
                </button>
            </div>
        </div>
    </div>
    
    <!-- Loading Modal -->
    <div id="loadingModal" class="confirmation-modal">
        <div class="modal-content">
            <div class="loading">
                <div class="spinner"></div>
                <p>Deleting employee...</p>
            </div>
        </div>
    </div>

    <script>
    <script>
    // Validate search form
    function validateSearchForm() {
        const empno = document.getElementById('searchId').value.trim();
        const errorDiv = document.getElementById('searchIdError');

        if (!empno) {
            errorDiv.textContent = 'Employee number is required';
            errorDiv.style.display = 'block';
            document.getElementById('searchId').classList.add('error');
            return false;
        }

        if (isNaN(empno) || parseInt(empno) <= 0) {
            errorDiv.textContent = 'Please enter a valid employee number';
            errorDiv.style.display = 'block';
            document.getElementById('searchId').classList.add('error');
            return false;
        }

        errorDiv.style.display = 'none';
        document.getElementById('searchId').classList.remove('error');
        return true;
    }

    // Clear error on input
    document.getElementById('searchId').addEventListener('input', function () {
        this.classList.remove('error');
        document.getElementById('searchIdError').style.display = 'none';
    });

    // Confirm delete function
    function confirmDelete(empId, empName) {
        currentEmployeeId = empId;
        currentEmployeeName = empName;

        document.getElementById('employeeId').textContent = empId;
        document.getElementById('employeeName').textContent = empName;
        document.getElementById('confirmationModal').style.display = 'block';
    }

    // Close modal
    function closeModal() {
        document.getElementById('confirmationModal').style.display = 'none';
        document.getElementById('loadingModal').style.display = 'none';
        currentEmployeeId = null;
        currentEmployeeName = null;
    }

    // Delete employee
    function deleteEmployee() {
        if (currentEmployeeId) {
            document.getElementById('confirmationModal').style.display = 'none';
            document.getElementById('loadingModal').style.display = 'block';

            // Create form and submit
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = 'DeleteEmployeeServlet';

            const empIdInput = document.createElement('input');
            empIdInput.type = 'hidden';
            empIdInput.name = 'empId';
            empIdInput.value = currentEmployeeId;

            form.appendChild(empIdInput);
            document.body.appendChild(form);

            setTimeout(() => {
                form.submit();
            }, 1000); // slight delay for UX
        }
    }

    // Close modal on outside click
    window.onclick = function (event) {
        const modal = document.getElementById('confirmationModal');
        if (event.target === modal) {
            closeModal();
        }
    };

    // Auto-hide messages after 5 seconds
    document.addEventListener('DOMContentLoaded', function () {
        const messages = document.querySelectorAll('.success-message, .error-alert');
        messages.forEach(message => {
            if (message.style.display === 'block') {
                setTimeout(() => {
                    message.style.opacity = '0';
                    setTimeout(() => {
                        message.style.display = 'none';
                    }, 300);
                }, 5000);
            }
        });
    });

    // Keyboard shortcuts
    document.addEventListener('keydown', function (e) {
        if (e.key === 'Escape') {
            closeModal();
        }
        if (e.key === 'Enter' && document.getElementById('confirmationModal').style.display === 'block') {
            deleteEmployee();
        }
    });

    // Auto-focus on search input
    window.addEventListener('load', function () {
        const searchInput = document.getElementById('searchId');
        if (searchInput && !searchInput.value) {
            searchInput.focus();
        }
    });

    // Add loading state to button
    function addLoadingState(button) {
        const originalText = button.innerHTML;
        button.innerHTML = '<span class="spinner" style="width: 20px; height: 20px; margin-right: 10px;"></span>Loading...';
        button.disabled = true;

        return function () {
            button.innerHTML = originalText;
            button.disabled = false;
        };
    }

    // Enhanced search form submission
    const formElement = document.querySelector('.search-form');
    if (formElement) {
        formElement.addEventListener('submit', function (e) {
            if (!validateSearchForm()) {
                e.preventDefault(); // Stop if validation fails
                return;
            }

            const submitBtn = this.querySelector('.btn-search');
            const resetLoading = addLoadingState(submitBtn);
            setTimeout(resetLoading, 10000);
        });
    }

    // Scroll to employee details if found
    <% if (employeeFound && emp != null) { %>
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelector('.main-content').scrollIntoView({
            behavior: 'smooth',
            block: 'start'
        });
    });
    let hasUnsavedChanges = true;
    <% } %>

    // Confirm before leaving if there are unsaved changes
    window.addEventListener('beforeunload', function (e) {
        if (hasUnsavedChanges) {
            e.preventDefault();
            e.returnValue = '';
        }
    });


        
        // Clear unsaved changes flag when deletion is confirmed
        function deleteEmployee() {
            hasUnsavedChanges = false;
            if (currentEmployeeId) {
                document.getElementById('confirmationModal').style.display = 'none';
                document.getElementById('loadingModal').style.display = 'block';
                
                // Create form and submit
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = 'DeleteEmployeeServlet';
                
                const empIdInput = document.createElement('input');
                empIdInput.type = 'hidden';
                empIdInput.name = 'empId';
                empIdInput.value = currentEmployeeId;
                
                form.appendChild(empIdInput);
                document.body.appendChild(form);
                
                setTimeout(() => {
                    form.submit();
                }, 1000);
            }
        }
    </script>
</body>
</html>