package com.dao;

import java.sql.*;
import java.util.*;
import com.model.Employee;
import com.project.util.DBUtil;

public class EmployeeDAO {

    // Insert new employee
    public static void insertEmployee(Employee e) throws Exception {
        String sql = "INSERT INTO Employee (Empno, EmpName, DoJ, Gender, Bsalary) VALUES (?, ?, ?, ?, ?)";
        try (Connection con = DBUtil.getConnection(); PreparedStatement ps = con.prepareStatement(sql)) {
            ps.setInt(1, e.getEmpno());
            ps.setString(2, e.getEmpName());
            ps.setDate(3, Date.valueOf(e.getDoJ()));  // Assuming e.getDoJ() returns LocalDate
            ps.setString(4, e.getGender());
            ps.setDouble(5, e.getBsalary());
            ps.executeUpdate();
        }
    }

    // Get employee by Empno
    public static Employee getEmployeeByEmpno(int empno) throws Exception {
        String sql = "SELECT * FROM Employee WHERE Empno = ?";
        try (Connection con = DBUtil.getConnection(); PreparedStatement ps = con.prepareStatement(sql)) {
            ps.setInt(1, empno);
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    Employee e = new Employee();
                    e.setEmpno(rs.getInt("Empno"));
                    e.setEmpName(rs.getString("EmpName"));
                    e.setDoJ(rs.getDate("DoJ").toLocalDate());
                    e.setGender(rs.getString("Gender"));
                    e.setBsalary(rs.getDouble("Bsalary"));
                    return e;
                }
            }
        }
        return null;
    }

    // Update employee
    public static void updateEmployee(Employee e) throws Exception {
        String sql = "UPDATE Employee SET EmpName=?, DoJ=?, Gender=?, Bsalary=? WHERE Empno=?";
        try (Connection con = DBUtil.getConnection(); PreparedStatement ps = con.prepareStatement(sql)) {
            ps.setString(1, e.getEmpName());
            ps.setDate(2, Date.valueOf(e.getDoJ()));
            ps.setString(3, e.getGender());
            ps.setDouble(4, e.getBsalary());
            ps.setInt(5, e.getEmpno());
            ps.executeUpdate();
        }
    }

    // Delete employee
    public static void deleteEmployee(int empno) throws Exception {
        String sql = "DELETE FROM Employee WHERE Empno = ?";
        try (Connection con = DBUtil.getConnection(); PreparedStatement ps = con.prepareStatement(sql)) {
            ps.setInt(1, empno);
            ps.executeUpdate();
        }
    }

    // Get all employees
    public static List<Employee> getAllEmployees() throws Exception {
        List<Employee> list = new ArrayList<>();
        String sql = "SELECT * FROM Employee";
        try (Connection con = DBUtil.getConnection(); PreparedStatement ps = con.prepareStatement(sql); ResultSet rs = ps.executeQuery()) {
            while (rs.next()) {
                Employee e = new Employee();
                e.setEmpno(rs.getInt("Empno"));
                e.setEmpName(rs.getString("EmpName"));
                e.setDoJ(rs.getDate("DoJ").toLocalDate());
                e.setGender(rs.getString("Gender"));
                e.setBsalary(rs.getDouble("Bsalary"));
                list.add(e);
            }
        }
        return list;
    }

    // Search employees by Empno or EmpName
    public static List<Employee> searchEmployees(String keyword) throws Exception {
        List<Employee> list = new ArrayList<>();
        String sql = "SELECT * FROM Employee WHERE CAST(Empno AS CHAR) LIKE ? OR EmpName LIKE ?";
        try (Connection con = DBUtil.getConnection(); PreparedStatement ps = con.prepareStatement(sql)) {
            ps.setString(1, "%" + keyword + "%");
            ps.setString(2, "%" + keyword + "%");
            try (ResultSet rs = ps.executeQuery()) {
                while (rs.next()) {
                    Employee e = new Employee();
                    e.setEmpno(rs.getInt("Empno"));
                    e.setEmpName(rs.getString("EmpName"));
                    e.setDoJ(rs.getDate("DoJ").toLocalDate());
                    e.setGender(rs.getString("Gender"));
                    e.setBsalary(rs.getDouble("Bsalary"));
                    list.add(e);
                }
            }
        }
        return list;
    }
}
