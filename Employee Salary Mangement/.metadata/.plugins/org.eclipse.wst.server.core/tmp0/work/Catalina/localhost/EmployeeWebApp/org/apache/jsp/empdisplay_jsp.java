/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-05-30 14:49:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;
import java.time.LocalDate;

public final class empdisplay_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.time.LocalDate");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Employee List</title>\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("    font-family: Arial, sans-serif;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    background-color: #e6f2ff; /* Changed to light blue */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h2 {\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    color: #333;\r\n");
      out.write("    margin-bottom: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table {\r\n");
      out.write("    width: 90%;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("    background-color: white;\r\n");
      out.write("    border-radius: 8px;\r\n");
      out.write("    overflow: hidden;\r\n");
      out.write("    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th, td {\r\n");
      out.write("    padding: 12px;\r\n");
      out.write("    text-align: left;\r\n");
      out.write("    border-bottom: 1px solid #ddd;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th {\r\n");
      out.write("    background-color: #007bff;\r\n");
      out.write("    color: white;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("tr:hover {\r\n");
      out.write("    background-color: #f8f9fa;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".message {\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".error {\r\n");
      out.write("    color: #dc3545;\r\n");
      out.write("    background-color: #f8d7da;\r\n");
      out.write("    border: 1px solid #f5c6cb;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    margin: 20px auto;\r\n");
      out.write("    width: 80%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Style for Back button */\r\n");
      out.write(".back-btn {\r\n");
      out.write("    display: block;\r\n");
      out.write("    width: 100px;\r\n");
      out.write("    margin: 30px auto 0 auto;\r\n");
      out.write("    padding: 10px 15px;\r\n");
      out.write("    background-color: #007bff;\r\n");
      out.write("    color: white;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("}\r\n");
      out.write(".back-btn:hover {\r\n");
      out.write("    background-color: #0056b3;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h2>Employee List</h2>\r\n");
      out.write("\r\n");

String url = "jdbc:mysql://localhost:3306/employeedb";
String user = "root";
String pass = "";
Connection con = null;
Statement stmt = null;
ResultSet rs = null;

try {
    Class.forName("com.mysql.cj.jdbc.Driver");
    con = DriverManager.getConnection(url, user, pass);
    stmt = con.createStatement();
    rs = stmt.executeQuery("SELECT * FROM Employee");

    if (!rs.isBeforeFirst()) {

      out.write("\r\n");
      out.write("    <div class=\"message\">No employees found.</div>\r\n");

    } else {

      out.write("\r\n");
      out.write("<table>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>Emp No</th>\r\n");
      out.write("<th>Name</th>\r\n");
      out.write("<th>Date of Joining</th>\r\n");
      out.write("<th>Gender</th>\r\n");
      out.write("<th>Salary</th>\r\n");
      out.write("</tr>\r\n");

        while (rs.next()) {

      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>");
      out.print( rs.getInt("Empno") );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print( rs.getString("EmpName") );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print( rs.getDate("DoJ") );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print( rs.getString("Gender") );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print( rs.getDouble("Bsalary") );
      out.write("</td>\r\n");
      out.write("</tr>\r\n");

        }

      out.write("\r\n");
      out.write("</table>\r\n");

    }
} catch (Exception e) {

      out.write("\r\n");
      out.write("<div class=\"error\">Error: ");
      out.print( e.getMessage() );
      out.write("</div>\r\n");

} finally {
    try { if (rs != null) rs.close(); } catch (Exception e) {}
    try { if (stmt != null) stmt.close(); } catch (Exception e) {}
    try { if (con != null) con.close(); } catch (Exception e) {}
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Back button -->\r\n");
      out.write("<a href=\"index.jsp\" class=\"back-btn\">Back</a>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
