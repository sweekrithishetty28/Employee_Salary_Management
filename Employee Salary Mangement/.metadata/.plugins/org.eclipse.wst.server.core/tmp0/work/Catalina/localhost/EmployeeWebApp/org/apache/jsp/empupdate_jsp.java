/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-05-30 11:06:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.model.Employee;
import com.dao.EmployeeDAO;
import java.text.*;

public final class empupdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("com.dao.EmployeeDAO");
    _jspx_imports_classes.add("com.model.Employee");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Update Employee</title>\r\n");
      out.write("<style>\r\n");
      out.write("* { margin: 0; padding: 0; box-sizing: border-box; }\r\n");
      out.write("body { \r\n");
      out.write("    font-family: Arial, sans-serif; \r\n");
      out.write("    background: #e3f2fd;\r\n");
      out.write("    min-height: 100vh;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("}\r\n");
      out.write(".container { \r\n");
      out.write("    width: 100%; \r\n");
      out.write("    max-width: 600px; \r\n");
      out.write("    margin: 0 auto; \r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("    gap: 20px;\r\n");
      out.write("}\r\n");
      out.write(".header {\r\n");
      out.write("    background: #2d3748;\r\n");
      out.write("    color: white;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("}\r\n");
      out.write(".form-section {\r\n");
      out.write("    background: white;\r\n");
      out.write("    padding: 30px;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    box-shadow: 0 4px 15px rgba(0,0,0,0.1);\r\n");
      out.write("}\r\n");
      out.write("label { \r\n");
      out.write("    font-weight: 600;\r\n");
      out.write("    color: #2d3748;\r\n");
      out.write("    display: block; \r\n");
      out.write("    margin-top: 15px;\r\n");
      out.write("    margin-bottom: 5px;\r\n");
      out.write("}\r\n");
      out.write("input, select { \r\n");
      out.write("    width: 100%; \r\n");
      out.write("    padding: 12px; \r\n");
      out.write("    margin-bottom: 15px; \r\n");
      out.write("    border: 2px solid #e2e8f0;\r\n");
      out.write("    border-radius: 8px;\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("    transition: all 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("input:focus, select:focus {\r\n");
      out.write("    outline: none;\r\n");
      out.write("    border-color: #1976d2;\r\n");
      out.write("    box-shadow: 0 0 0 3px rgba(25, 118, 210, 0.1);\r\n");
      out.write("}\r\n");
      out.write(".submit-btn { \r\n");
      out.write("    background: #1976d2;\r\n");
      out.write("    color: white; \r\n");
      out.write("    border: none; \r\n");
      out.write("    padding: 15px 30px;\r\n");
      out.write("    border-radius: 8px;\r\n");
      out.write("    cursor: pointer; \r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    font-weight: 600;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin-top: 20px;\r\n");
      out.write("    transition: all 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write(".submit-btn:hover {\r\n");
      out.write("    background: #1565c0;\r\n");
      out.write("    transform: translateY(-2px);\r\n");
      out.write("    box-shadow: 0 4px 15px rgba(25, 118, 210, 0.4);\r\n");
      out.write("}\r\n");
      out.write(".search-btn {\r\n");
      out.write("    background: #ff9800;\r\n");
      out.write("    color: white; \r\n");
      out.write("    border: none; \r\n");
      out.write("    padding: 15px 30px;\r\n");
      out.write("    border-radius: 8px;\r\n");
      out.write("    cursor: pointer; \r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    font-weight: 600;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin-top: 20px;\r\n");
      out.write("    transition: all 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write(".search-btn:hover {\r\n");
      out.write("    background: #f57c00;\r\n");
      out.write("    transform: translateY(-2px);\r\n");
      out.write("    box-shadow: 0 4px 15px rgba(255, 152, 0, 0.4);\r\n");
      out.write("}\r\n");
      out.write(".reset-btn {\r\n");
      out.write("    background: #666;\r\n");
      out.write("    color: white; \r\n");
      out.write("    border: none; \r\n");
      out.write("    padding: 15px 30px;\r\n");
      out.write("    border-radius: 8px;\r\n");
      out.write("    cursor: pointer; \r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    font-weight: 600;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin-top: 10px;\r\n");
      out.write("    transition: all 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write(".reset-btn:hover {\r\n");
      out.write("    background: #555;\r\n");
      out.write("    transform: translateY(-2px);\r\n");
      out.write("}\r\n");
      out.write(".error { \r\n");
      out.write("    background: #fed7d7;\r\n");
      out.write("    color: #c53030;\r\n");
      out.write("    padding: 15px;\r\n");
      out.write("    border-radius: 8px;\r\n");
      out.write("    border-left: 4px solid #e53e3e;\r\n");
      out.write("    margin: 15px 0;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("}\r\n");
      out.write(".success { \r\n");
      out.write("    background: #c6f6d5;\r\n");
      out.write("    color: #276749;\r\n");
      out.write("    padding: 15px;\r\n");
      out.write("    border-radius: 8px;\r\n");
      out.write("    border-left: 4px solid #38a169;\r\n");
      out.write("    margin: 15px 0;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    font-weight: 600;\r\n");
      out.write("}\r\n");
      out.write(".info { \r\n");
      out.write("    background: #bee3f8;\r\n");
      out.write("    color: #2c5282;\r\n");
      out.write("    padding: 15px;\r\n");
      out.write("    border-radius: 8px;\r\n");
      out.write("    border-left: 4px solid #3182ce;\r\n");
      out.write("    margin: 15px 0;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    font-weight: 600;\r\n");
      out.write("}\r\n");
      out.write("h2 {\r\n");
      out.write("    color: #2d3748;\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write(".form-group {\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write(".form-group label {\r\n");
      out.write("    margin-top: 0;\r\n");
      out.write("}\r\n");
      out.write(".required::after {\r\n");
      out.write("    content: \" *\";\r\n");
      out.write("    color: #e53e3e;\r\n");
      out.write("}\r\n");
      out.write(".back-link {\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    color: white;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    background: rgba(255,255,255,0.2);\r\n");
      out.write("    padding: 10px 20px;\r\n");
      out.write("    border-radius: 8px;\r\n");
      out.write("    margin-top: 20px;\r\n");
      out.write("    transition: all 0.3s ease;\r\n");
      out.write("    font-weight: 500;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("}\r\n");
      out.write(".back-link:hover {\r\n");
      out.write("    background: rgba(255,255,255,0.3);\r\n");
      out.write("    transform: translateX(-5px);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input:disabled {\r\n");
      out.write("    background: #f5f5f5 !important;\r\n");
      out.write("    color: #666;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"header\">\r\n");
      out.write("        <h1>Update Employee</h1>\r\n");
      out.write("        <a href=\"index.jsp\" class=\"back-link\">← Back to Home</a>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <!-- Search Employee Form -->\r\n");
      out.write("        <div class=\"form-section\">\r\n");
      out.write("            <h2>Search Employee</h2>\r\n");
      out.write("            \r\n");
      out.write("            <form method=\"get\">\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"id\" class=\"required\">Employee ID</label>\r\n");
      out.write("                    <input type=\"number\" id=\"id\" name=\"id\" required min=\"1\" \r\n");
      out.write("                           placeholder=\"Enter employee ID to search\"\r\n");
      out.write("                           value=\"");
      out.print( request.getParameter("id") != null ? request.getParameter("id") : "" );
      out.write("\">\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <input type=\"submit\" value=\"Search Employee\" class=\"search-btn\">\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        ");

        String idParam = request.getParameter("id");
        Employee emp = null;
        boolean found = false;
        String error = "";
        
        if (idParam != null && !idParam.trim().isEmpty()) {
            try {
                int empId = Integer.parseInt(idParam);
                emp = EmployeeDAO.getEmployeeById(empId);
                found = emp != null;
                if (!found) error = "Employee with ID " + empId + " not found!";
            } catch (Exception e) {
                error = "Error: " + e.getMessage();
            }
        }
        
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        ");
 if (!error.isEmpty()) { 
      out.write("\r\n");
      out.write("        <div class=\"error\">");
      out.print( error );
      out.write("</div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        ");

        String successMessage = (String) request.getAttribute("message");
        String successParam = request.getParameter("success");
        if (successMessage != null && (successMessage.toLowerCase().contains("success") || successMessage.toLowerCase().contains("updated"))) {
        
      out.write("\r\n");
      out.write("        <div class=\"success\">✅ Employee Updated Successfully!</div>\r\n");
      out.write("        ");

        } else if ("true".equals(successParam)) {
        
      out.write("\r\n");
      out.write("        <div class=\"success\">✅ Employee Updated Successfully!</div>\r\n");
      out.write("        ");

        }
        
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        ");
 if (found && emp != null) { 
      out.write("\r\n");
      out.write("        <div class=\"info\">\r\n");
      out.write("            <strong>Found:</strong> ");
      out.print( emp.getName() );
      out.write(" (ID: ");
      out.print( emp.getId() );
      out.write(")\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <!-- Update Employee Form -->\r\n");
      out.write("        <div class=\"form-section\">\r\n");
      out.write("            <h2>Update Employee Details</h2>\r\n");
      out.write("            \r\n");
      out.write("            <form action=\"UpdateEmployee\" method=\"post\">\r\n");
      out.write("                <input type=\"hidden\" name=\"id\" value=\"");
      out.print( emp.getId() );
      out.write("\">\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"emp_id\">Employee ID</label>\r\n");
      out.write("                    <input type=\"text\" id=\"emp_id\" value=\"");
      out.print( emp.getId() );
      out.write("\" disabled>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"name\" class=\"required\">Full Name</label>\r\n");
      out.write("                    <input type=\"text\" id=\"name\" name=\"name\" required value=\"");
      out.print( emp.getName() );
      out.write("\" placeholder=\"Enter employee full name\">\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"doj\" class=\"required\">Date of Joining</label>\r\n");
      out.write("                    <input type=\"date\" id=\"doj\" name=\"doj\" required value=\"");
      out.print( emp.getDoj() );
      out.write("\">\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"gender\" class=\"required\">Gender</label>\r\n");
      out.write("                    <select id=\"gender\" name=\"gender\" required>\r\n");
      out.write("                        <option value=\"\">Select Gender</option>\r\n");
      out.write("                        <option value=\"Male\" ");
      out.print( "Male".equals(emp.getGender()) ? "selected" : "" );
      out.write(">Male</option>\r\n");
      out.write("                        <option value=\"Female\" ");
      out.print( "Female".equals(emp.getGender()) ? "selected" : "" );
      out.write(">Female</option>\r\n");
      out.write("                        <option value=\"Other\" ");
      out.print( "Other".equals(emp.getGender()) ? "selected" : "" );
      out.write(">Other</option>\r\n");
      out.write("                    </select>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"salary\" class=\"required\">Monthly Salary</label>\r\n");
      out.write("                    <input type=\"number\" id=\"salary\" name=\"salary\" required step=\"0.01\" min=\"0\" value=\"");
      out.print( emp.getSalary() );
      out.write("\" placeholder=\"0.00\">\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <input type=\"submit\" value=\"Update Employee\" class=\"submit-btn\">\r\n");
      out.write("                <input type=\"reset\" value=\"Reset Form\" class=\"reset-btn\">\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("        \r\n");
      out.write("      \r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
